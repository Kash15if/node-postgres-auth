For testing purpose

// var token = jwt.sign({ foo: "bar" }, "shhhhh");

app.get("/", async function (req, res) {
  var token = jwt.sign({ name: "Kashif_" }, "shhhhh");

  const salt = await bcrypt.genSalt();

  const passhash = await bcrypt.hash("Kashif", salt);

  const comp = await bcrypt.compare("Kashif", passhash);

  if (comp) console.log("Password Matched");

  console.log(passhash);

  const out = await pool.query("SELECT personid, name FROM public.test1;");
  // return out;

  console.log(out.rows);

  res.send(out.rows);
});

//authorization for api data by passing token in header
app.get("/checkHeader", async function (req, res) {
  console.log(req.headers);

  const jwttoken = req.headers.authorization;
  const TokenArray = jwttoken.split(" ");

  console.log(TokenArray[1]);
  const decoded = jwt.decode(TokenArray[1]);

  console.log(decoded);
  const person = decoded;
  res.send(`username is ${person.name}`);
});




//verify jwt
router.get("/verifyJWT", async function (req, res) {
  var token = await jwt.sign({ foo: "bar" }, "KashifAHmad", {
    algorithm: "HS256",
  });

  var decoded = await jwt.verify(token, "KashifAHmad", function (err, decoded) {
    if (err) res.send(err);

    res.send(decoded);
  });
});
